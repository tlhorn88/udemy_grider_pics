{"ast":null,"code":"var _jsxFileName = \"/Users/tabethahorn/Documents/code/udemy_courses/react_grider/pics/src/Components/SearchBar.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchBar(_ref) {\n  _s();\n  let {\n    onSubmit\n  } = _ref;\n  // 1 - Create a new piece of state\n  const [term, setTerm] = useState('');\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    onSubmit('cars');\n  };\n\n  // 2 - Create an event handler to watch for the 'onChange' event\n  const handleChange = event => {\n    // 3 - When the 'onChange' event fires, get the value from the input\n    // console.log(event.target.value);\n    // 4 - Take that value from the input and use it to update your state\n    setTerm(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"   // 5 - Pass your state to the input as the value prop\", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: term,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n}\n_s(SearchBar, \"LeNXftUoqlrnGX04rvwGT18cUV0=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["useState","SearchBar","onSubmit","term","setTerm","handleFormSubmit","event","preventDefault","handleChange","target","value"],"sources":["/Users/tabethahorn/Documents/code/udemy_courses/react_grider/pics/src/Components/SearchBar.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction SearchBar({ onSubmit }) {\n    // 1 - Create a new piece of state\n    const [term, setTerm] = useState('');\n\n    const handleFormSubmit = (event) => {\n        event.preventDefault();\n\n        onSubmit('cars');\n    };\n\n    // 2 - Create an event handler to watch for the 'onChange' event\n    const handleChange = (event) => {\n        // 3 - When the 'onChange' event fires, get the value from the input\n        // console.log(event.target.value);\n        // 4 - Take that value from the input and use it to update your state\n        setTerm(event.target.value)\n    };\n\n    return <div>   // 5 - Pass your state to the input as the value prop\n        <form onSubmit={handleFormSubmit}>\n         \n            <input value={term} onChange={handleChange} />\n        </form>\n    </div>\n}\n\nexport default SearchBar;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAEjC,SAASC,SAAS,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EAC3B;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMK,gBAAgB,GAAIC,KAAK,IAAK;IAChCA,KAAK,CAACC,cAAc,EAAE;IAEtBL,QAAQ,CAAC,MAAM,CAAC;EACpB,CAAC;;EAED;EACA,MAAMM,YAAY,GAAIF,KAAK,IAAK;IAC5B;IACA;IACA;IACAF,OAAO,CAACE,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,oBAAO;IAAA,WAAK,0DACR;MAAM,QAAQ,EAAEL,gBAAiB;MAAA,uBAE7B;QAAO,KAAK,EAAEF,IAAK;QAAC,QAAQ,EAAEK;MAAa;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC3C;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AACV;AAAC,GAxBQP,SAAS;AAAA,KAATA,SAAS;AA0BlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}